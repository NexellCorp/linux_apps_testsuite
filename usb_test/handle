accessory.c:46:	if (acc->pid >= AOA_AUDIO_PID) {
accessory.c:57:		if ((acc->pid == AOA_AUDIO_PID)
accessory.c:58:		    || (acc->pid == AOA_AUDIO_ADB_PID)) {
accessory.c:66:		ret = libusb_claim_interface(acc->handle, interface);
accessory.c:86:		acc->transfer = libusb_alloc_transfer(AUDIO_NUM_ISO_PACKETS);
accessory.c:87:		if (!acc->transfer) {
accessory.c:92:		ret = libusb_set_interface_alt_setting(acc->handle, interface,
accessory.c:102:						   (acc->handle), endpoint);
accessory.c:111:		acc->transfer->dev_handle = acc->handle;
accessory.c:112:		acc->transfer->endpoint = endpoint;
accessory.c:113:		acc->transfer->type = LIBUSB_TRANSFER_TYPE_ISOCHRONOUS;
accessory.c:114:		acc->transfer->timeout = 0;	/* no timeout */
accessory.c:115:		acc->transfer->length = AUDIO_NUM_ISO_PACKETS * max_pkt_size;
accessory.c:116:		acc->transfer->buffer = malloc(acc->transfer->length);
accessory.c:117:		acc->transfer->callback = audio_callback;
accessory.c:118:		acc->transfer->num_iso_packets = AUDIO_NUM_ISO_PACKETS;
accessory.c:120:		libusb_set_iso_packet_lengths(acc->transfer, max_pkt_size);
accessory.c:129:		ret = libusb_submit_transfer(acc->transfer);
accessory.c:139:	if ((acc->pid != AOA_AUDIO_ADB_PID) && (acc->pid != AOA_AUDIO_PID)) {
accessory.c:146:		    libusb_claim_interface(acc->handle,
accessory.c:158:			    libusb_bulk_transfer(acc->handle,
accessory.c:186:				libusb_bulk_transfer(acc->handle,
accessory.c:201:	if ((acc->aoa_version > 1) && (acc->pid > AOA_ACCESSORY_ADB_PID)) {
hid.c:167:		libusb_fill_control_transfer(android_transfer, acc->handle,
hid.c:187:		libusb_bulk_transfer(acc->handle,
hid.c:331:	ret = libusb_control_transfer(acc->handle, LIBUSB_ENDPOINT_OUT |
hid.c:342:	ret = libusb_control_transfer(acc->handle, LIBUSB_ENDPOINT_OUT |
linux-adk.c:181:	handle = acc->handle;
linux-adk.c:207:	vid = (uint16_t) strtol(acc->device, &tmp, 16);
linux-adk.c:212:	acc->handle = libusb_open_device_with_vid_pid(NULL, vid, pid);
linux-adk.c:213:	if (acc->handle == NULL) {
linux-adk.c:219:	ret = libusb_control_transfer(acc->handle,
linux-adk.c:228:		acc->aoa_version = ((buffer[1] << 8) | buffer[0]);
linux-adk.c:229:		printf("Device supports AOA %d.0!\n", acc->aoa_version);
linux-adk.c:236:	if ((acc->aoa_version < 2) && !acc->manufacturer) {
linux-adk.c:243:	if (acc->manufacturer) {
linux-adk.c:244:		printf(" sending manufacturer: %s\n", acc->manufacturer);
linux-adk.c:245:		ret = libusb_control_transfer(acc->handle,
linux-adk.c:250:					      (uint8_t *) acc->manufacturer,
linux-adk.c:251:					      strlen(acc->manufacturer) + 1, 0);
linux-adk.c:256:	if (acc->model) {
linux-adk.c:257:		printf(" sending model: %s\n", acc->model);
linux-adk.c:258:		ret = libusb_control_transfer(acc->handle,
linux-adk.c:263:					      (uint8_t *) acc->model,
linux-adk.c:264:					      strlen(acc->model) + 1, 0);
linux-adk.c:269:	printf(" sending description: %s\n", acc->description);
linux-adk.c:270:	ret = libusb_control_transfer(acc->handle,
linux-adk.c:274:				      (uint8_t *) acc->description,
linux-adk.c:275:				      strlen(acc->description) + 1, 0);
linux-adk.c:279:	printf(" sending version: %s\n", acc->version);
linux-adk.c:280:	ret = libusb_control_transfer(acc->handle,
linux-adk.c:284:				      (uint8_t *) acc->version,
linux-adk.c:285:				      strlen(acc->version) + 1, 0);
linux-adk.c:289:	printf(" sending url: %s\n", acc->url);
linux-adk.c:290:	ret = libusb_control_transfer(acc->handle,
linux-adk.c:294:				      (uint8_t *) acc->url,
linux-adk.c:295:				      strlen(acc->url) + 1, 0);
linux-adk.c:299:	printf(" sending serial number: %s\n", acc->serial);
linux-adk.c:300:	ret = libusb_control_transfer(acc->handle,
linux-adk.c:304:				      (uint8_t *) acc->serial,
linux-adk.c:305:				      strlen(acc->serial) + 1, 0);
linux-adk.c:309:	if (acc->aoa_version >= 2) {
linux-adk.c:311:		ret = libusb_control_transfer(acc->handle,
linux-adk.c:320:	ret = libusb_control_transfer(acc->handle,
linux-adk.c:388:	acc->handle = handle;
linux-adk.c:389:	acc->vid = vid;
linux-adk.c:390:	acc->pid = pid;
linux-adk.c:398:	if (acc->handle != NULL) {
linux-adk.c:399:		libusb_release_interface(acc->handle, 0);
linux-adk.c:400:		libusb_close(acc->handle);
